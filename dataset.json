[
    {
      "id": "SQLI_001",
      "code_language": "Python",
      "code_snippet": "username = request.args.get('username')\nquery = \"SELECT * FROM users WHERE username = '%s'\" % username\ncursor.execute(query)",
      "is_vulnerable": true,
      "vulnerability_type": "SQL Injection",
      "description": "Kullan\u0131c\u0131 girdisi SQL sorgusuna do\u011frudan eklenmi\u015f.",
      "remediation_suggestion": "Parametreli sorgular kullan\u0131n.",
      "source": "https://owasp.org/www-community/attacks/SQL_Injection"
    },
    {
      "id": "SQLI_002",
      "code_language": "Python",
      "code_snippet": "cursor.execute(\"SELECT * FROM users WHERE username = %s\", (username,))",
      "is_vulnerable": false,
      "vulnerability_type": "",
      "description": "Parametreli sorgu kullan\u0131larak SQL Injection \u00f6nlenmi\u015f.",
      "remediation_suggestion": "",
      "source": "https://owasp.org/www-community/attacks/SQL_Injection"
    },
    {
      "id": "XSS_001",
      "code_language": "Python",
      "code_snippet": "@app.route(\"/search\")\ndef search():\n    q = request.args.get(\"q\")\n    return f\"<h1>{q}</h1>\"",
      "is_vulnerable": true,
      "vulnerability_type": "Cross-Site Scripting (XSS)",
      "description": "Kullan\u0131c\u0131 girdisi HTML \u00e7\u0131kt\u0131s\u0131na do\u011frudan eklenmi\u015f.",
      "remediation_suggestion": "\u00c7\u0131kt\u0131lar\u0131 HTML escape edin.",
      "source": "https://cheatsheetseries.owasp.org/cheatsheets/XSS_Prevention_Cheat_Sheet.html"
    },
    {
      "id": "XSS_002",
      "code_language": "Python",
      "code_snippet": "@app.route(\"/search\")\ndef search():\n    q = request.args.get(\"q\")\n    return render_template(\"results.html\", query=q)",
      "is_vulnerable": false,
      "vulnerability_type": "",
      "description": "Jinja2 template otomatik HTML escape \u00f6zelli\u011fi sayesinde g\u00fcvenlidir.",
      "remediation_suggestion": "",
      "source": "https://flask.palletsprojects.com/en/2.0.x/templating/"
    },
    {
      "id": "CMD_001",
      "code_language": "Python",
      "code_snippet": "import os\ncommand = request.args.get('cmd')\nos.system(command)",
      "is_vulnerable": true,
      "vulnerability_type": "Command Injection",
      "description": "Kullan\u0131c\u0131 girdisi kabuk komutuna do\u011frudan aktar\u0131lm\u0131\u015f.",
      "remediation_suggestion": "Komutlar\u0131 liste \u015feklinde verin, shell=True kullanmay\u0131n.",
      "source": "https://snyk.io/blog/python-security-best-practices/"
    },
    {
      "id": "CMD_002",
      "code_language": "Python",
      "code_snippet": "import subprocess\ncmd = request.args.get('cmd')\nsubprocess.run(['ls', '-l', cmd], shell=False)",
      "is_vulnerable": false,
      "vulnerability_type": "",
      "description": "Shell kullan\u0131lmad\u0131\u011f\u0131 ve komutlar listeyle ayr\u0131ld\u0131\u011f\u0131 i\u00e7in g\u00fcvenlidir.",
      "remediation_suggestion": "",
      "source": "https://snyk.io/blog/python-security-best-practices/"
    },
    {
      "id": "PATH_001",
      "code_language": "Python",
      "code_snippet": "filename = request.args.get('file')\nwith open('/var/www/html/' + filename, 'r') as f:\n    return f.read()",
      "is_vulnerable": true,
      "vulnerability_type": "Path Traversal",
      "description": "Kullan\u0131c\u0131 girdisiyle dosya yolu olu\u015fturulmu\u015f.",
      "remediation_suggestion": "Dosya adlar\u0131n\u0131 do\u011frulay\u0131n, path normalization kullan\u0131n.",
      "source": "https://owasp.org/www-community/attacks/Path_Traversal"
    },
    {
      "id": "PATH_002",
      "code_language": "Python",
      "code_snippet": "filename = os.path.basename(request.args.get('file'))\nwith open(os.path.join('/safe/dir', filename), 'r') as f:\n    return f.read()",
      "is_vulnerable": false,
      "vulnerability_type": "",
      "description": "Dosya ad\u0131 normalize edilerek path traversal engellenmi\u015f.",
      "remediation_suggestion": "",
      "source": "https://owasp.org/www-community/attacks/Path_Traversal"
    },
    {
      "id": "DESERIAL_001",
      "code_language": "Python",
      "code_snippet": "import pickle\nuser_data = request.files['data'].read()\ndata = pickle.loads(user_data)",
      "is_vulnerable": true,
      "vulnerability_type": "Insecure Deserialization",
      "description": "Kullan\u0131c\u0131 girdisi pickle.loads ile deserialize ediliyor.",
      "remediation_suggestion": "G\u00fcvenli alternatifler kullan\u0131n, do\u011frulama yap\u0131n.",
      "source": "https://owasp.org/www-community/vulnerabilities/Insecure_Deserialization"
    },
    {
      "id": "DESERIAL_002",
      "code_language": "Python",
      "code_snippet": "import json\nuser_data = json.loads(request.data)",
      "is_vulnerable": false,
      "vulnerability_type": "",
      "description": "JSON g\u00fcvenli bir veri format\u0131d\u0131r, pickle yerine kullan\u0131lm\u0131\u015f.",
      "remediation_suggestion": "",
      "source": "https://owasp.org/www-community/vulnerabilities/Insecure_Deserialization"
    },
    {
      "id": "SQLI_5FB5557C",
      "code_language": "Python",
      "code_snippet": "username = request.args.get('username')\nquery = \"SELECT * FROM users WHERE username = '%s'\" % username\ncursor.execute(query)",
      "is_vulnerable": true,
      "vulnerability_type": "SQL Injection",
      "description": "Kullan\u0131c\u0131 girdisi SQL sorgusuna do\u011frudan eklenmi\u015f.",
      "remediation_suggestion": "Parametreli sorgular kullan\u0131n.",
      "source": "https://owasp.org/www-community/attacks/SQL_Injection"
    },
    {
      "id": "SQLI_E2AFBBFE",
      "code_language": "Python",
      "code_snippet": "cursor.execute(\"SELECT * FROM users WHERE username = %s\", (username,))",
      "is_vulnerable": false,
      "vulnerability_type": "",
      "description": "Parametreli sorgu kullan\u0131larak SQL Injection \u00f6nlenmi\u015f.",
      "remediation_suggestion": "",
      "source": "https://owasp.org/www-community/attacks/SQL_Injection"
    },
    {
      "id": "XSS_8E14E1B9",
      "code_language": "Python",
      "code_snippet": "@app.route(\"/search\")\ndef search():\n    q = request.args.get(\"q\")\n    return f\"<h1>{q}</h1>\"",
      "is_vulnerable": true,
      "vulnerability_type": "Cross-Site Scripting (XSS)",
      "description": "Kullan\u0131c\u0131 girdisi HTML \u00e7\u0131kt\u0131s\u0131na do\u011frudan eklenmi\u015f.",
      "remediation_suggestion": "\u00c7\u0131kt\u0131lar\u0131 HTML escape edin.",
      "source": "https://cheatsheetseries.owasp.org/cheatsheets/XSS_Prevention_Cheat_Sheet.html"
    },
    {
      "id": "XSS_248982D3",
      "code_language": "Python",
      "code_snippet": "@app.route(\"/search\")\ndef search():\n    q = request.args.get(\"q\")\n    return render_template(\"results.html\", query=q)",
      "is_vulnerable": false,
      "vulnerability_type": "",
      "description": "Jinja2 template otomatik HTML escape \u00f6zelli\u011fi sayesinde g\u00fcvenlidir.",
      "remediation_suggestion": "",
      "source": "https://flask.palletsprojects.com/en/2.0.x/templating/"
    },
    {
      "id": "CMD_57EA3564",
      "code_language": "Python",
      "code_snippet": "import os\ncommand = request.args.get('cmd')\nos.system(command)",
      "is_vulnerable": true,
      "vulnerability_type": "Command Injection",
      "description": "Kullan\u0131c\u0131 girdisi kabuk komutuna do\u011frudan aktar\u0131lm\u0131\u015f.",
      "remediation_suggestion": "Komutlar\u0131 liste \u015feklinde verin, shell=True kullanmay\u0131n.",
      "source": "https://snyk.io/blog/python-security-best-practices/"
    },
    {
      "id": "CMD_9C6AAB04",
      "code_language": "Python",
      "code_snippet": "import subprocess\ncmd = request.args.get('cmd')\nsubprocess.run(['ls', '-l', cmd], shell=False)",
      "is_vulnerable": false,
      "vulnerability_type": "",
      "description": "Shell kullan\u0131lmad\u0131\u011f\u0131 ve komutlar listeyle ayr\u0131ld\u0131\u011f\u0131 i\u00e7in g\u00fcvenlidir.",
      "remediation_suggestion": "",
      "source": "https://snyk.io/blog/python-security-best-practices/"
    },
    {
      "id": "PATH_A20FF5F9",
      "code_language": "Python",
      "code_snippet": "filename = request.args.get('file')\nwith open('/var/www/html/' + filename, 'r') as f:\n    return f.read()",
      "is_vulnerable": true,
      "vulnerability_type": "Path Traversal",
      "description": "Kullan\u0131c\u0131 girdisiyle dosya yolu olu\u015fturulmu\u015f.",
      "remediation_suggestion": "Dosya adlar\u0131n\u0131 do\u011frulay\u0131n, path normalization kullan\u0131n.",
      "source": "https://owasp.org/www-community/attacks/Path_Traversal"
    },
    {
      "id": "PATH_C963E845",
      "code_language": "Python",
      "code_snippet": "filename = os.path.basename(request.args.get('file'))\nwith open(os.path.join('/safe/dir', filename), 'r') as f:\n    return f.read()",
      "is_vulnerable": false,
      "vulnerability_type": "",
      "description": "Dosya ad\u0131 normalize edilerek path traversal engellenmi\u015f.",
      "remediation_suggestion": "",
      "source": "https://owasp.org/www-community/attacks/Path_Traversal"
    },
    {
      "id": "DESERIAL_5E835AEF",
      "code_language": "Python",
      "code_snippet": "import pickle\nuser_data = request.files['data'].read()\ndata = pickle.loads(user_data)",
      "is_vulnerable": true,
      "vulnerability_type": "Insecure Deserialization",
      "description": "Kullan\u0131c\u0131 girdisi pickle.loads ile deserialize ediliyor.",
      "remediation_suggestion": "G\u00fcvenli alternatifler kullan\u0131n, do\u011frulama yap\u0131n.",
      "source": "https://owasp.org/www-community/vulnerabilities/Insecure_Deserialization"
    },
    {
      "id": "DESERIAL_921CA73B",
      "code_language": "Python",
      "code_snippet": "import json\nuser_data = json.loads(request.data)",
      "is_vulnerable": false,
      "vulnerability_type": "",
      "description": "JSON g\u00fcvenli bir veri format\u0131d\u0131r, pickle yerine kullan\u0131lm\u0131\u015f.",
      "remediation_suggestion": "",
      "source": "https://owasp.org/www-community/vulnerabilities/Insecure_Deserialization"
    },
    {
      "id": "SQLI_25BA9530",
      "code_language": "Python",
      "code_snippet": "username = request.args.get('username')\nquery = \"SELECT * FROM users WHERE username = '%s'\" % username\ncursor.execute(query)",
      "is_vulnerable": true,
      "vulnerability_type": "SQL Injection",
      "description": "Kullan\u0131c\u0131 girdisi SQL sorgusuna do\u011frudan eklenmi\u015f.",
      "remediation_suggestion": "Parametreli sorgular kullan\u0131n.",
      "source": "https://owasp.org/www-community/attacks/SQL_Injection"
    },
    {
      "id": "SQLI_3551F4CE",
      "code_language": "Python",
      "code_snippet": "cursor.execute(\"SELECT * FROM users WHERE username = %s\", (username,))",
      "is_vulnerable": false,
      "vulnerability_type": "",
      "description": "Parametreli sorgu kullan\u0131larak SQL Injection \u00f6nlenmi\u015f.",
      "remediation_suggestion": "",
      "source": "https://owasp.org/www-community/attacks/SQL_Injection"
    },
    {
      "id": "XSS_E64C4BBB",
      "code_language": "Python",
      "code_snippet": "@app.route(\"/search\")\ndef search():\n    q = request.args.get(\"q\")\n    return f\"<h1>{q}</h1>\"",
      "is_vulnerable": true,
      "vulnerability_type": "Cross-Site Scripting (XSS)",
      "description": "Kullan\u0131c\u0131 girdisi HTML \u00e7\u0131kt\u0131s\u0131na do\u011frudan eklenmi\u015f.",
      "remediation_suggestion": "\u00c7\u0131kt\u0131lar\u0131 HTML escape edin.",
      "source": "https://cheatsheetseries.owasp.org/cheatsheets/XSS_Prevention_Cheat_Sheet.html"
    },
    {
      "id": "XSS_BB60E189",
      "code_language": "Python",
      "code_snippet": "@app.route(\"/search\")\ndef search():\n    q = request.args.get(\"q\")\n    return render_template(\"results.html\", query=q)",
      "is_vulnerable": false,
      "vulnerability_type": "",
      "description": "Jinja2 template otomatik HTML escape \u00f6zelli\u011fi sayesinde g\u00fcvenlidir.",
      "remediation_suggestion": "",
      "source": "https://flask.palletsprojects.com/en/2.0.x/templating/"
    },
    {
      "id": "CMD_FFDBC579",
      "code_language": "Python",
      "code_snippet": "import os\ncommand = request.args.get('cmd')\nos.system(command)",
      "is_vulnerable": true,
      "vulnerability_type": "Command Injection",
      "description": "Kullan\u0131c\u0131 girdisi kabuk komutuna do\u011frudan aktar\u0131lm\u0131\u015f.",
      "remediation_suggestion": "Komutlar\u0131 liste \u015feklinde verin, shell=True kullanmay\u0131n.",
      "source": "https://snyk.io/blog/python-security-best-practices/"
    },
    {
      "id": "CMD_56B3704A",
      "code_language": "Python",
      "code_snippet": "import subprocess\ncmd = request.args.get('cmd')\nsubprocess.run(['ls', '-l', cmd], shell=False)",
      "is_vulnerable": false,
      "vulnerability_type": "",
      "description": "Shell kullan\u0131lmad\u0131\u011f\u0131 ve komutlar listeyle ayr\u0131ld\u0131\u011f\u0131 i\u00e7in g\u00fcvenlidir.",
      "remediation_suggestion": "",
      "source": "https://snyk.io/blog/python-security-best-practices/"
    },
    {
      "id": "PATH_4EB9E68C",
      "code_language": "Python",
      "code_snippet": "filename = request.args.get('file')\nwith open('/var/www/html/' + filename, 'r') as f:\n    return f.read()",
      "is_vulnerable": true,
      "vulnerability_type": "Path Traversal",
      "description": "Kullan\u0131c\u0131 girdisiyle dosya yolu olu\u015fturulmu\u015f.",
      "remediation_suggestion": "Dosya adlar\u0131n\u0131 do\u011frulay\u0131n, path normalization kullan\u0131n.",
      "source": "https://owasp.org/www-community/attacks/Path_Traversal"
    },
    {
      "id": "PATH_98839357",
      "code_language": "Python",
      "code_snippet": "filename = os.path.basename(request.args.get('file'))\nwith open(os.path.join('/safe/dir', filename), 'r') as f:\n    return f.read()",
      "is_vulnerable": false,
      "vulnerability_type": "",
      "description": "Dosya ad\u0131 normalize edilerek path traversal engellenmi\u015f.",
      "remediation_suggestion": "",
      "source": "https://owasp.org/www-community/attacks/Path_Traversal"
    },
    {
      "id": "DESERIAL_00142A52",
      "code_language": "Python",
      "code_snippet": "import pickle\nuser_data = request.files['data'].read()\ndata = pickle.loads(user_data)",
      "is_vulnerable": true,
      "vulnerability_type": "Insecure Deserialization",
      "description": "Kullan\u0131c\u0131 girdisi pickle.loads ile deserialize ediliyor.",
      "remediation_suggestion": "G\u00fcvenli alternatifler kullan\u0131n, do\u011frulama yap\u0131n.",
      "source": "https://owasp.org/www-community/vulnerabilities/Insecure_Deserialization"
    },
    {
      "id": "DESERIAL_00DF24C6",
      "code_language": "Python",
      "code_snippet": "import json\nuser_data = json.loads(request.data)",
      "is_vulnerable": false,
      "vulnerability_type": "",
      "description": "JSON g\u00fcvenli bir veri format\u0131d\u0131r, pickle yerine kullan\u0131lm\u0131\u015f.",
      "remediation_suggestion": "",
      "source": "https://owasp.org/www-community/vulnerabilities/Insecure_Deserialization"
    }
  ]